@model RealEstate.Domain.DomainModels.Appointment
@{
    ViewData["Title"] = "Schedule Appointment";
    var property = ViewBag.Property as RealEstate.Domain.DomainModels.Property;
    var agents = ViewBag.Agents as List<RealEstate.Domain.DomainModels.Agent>;
}

<div class="container">
    <h2>Schedule Appointment</h2>

    <div class="row">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <h5>Appointment for: @property?.Title</h5>
                </div>
                <div class="card-body">
                    <form method="post">
                        <input type="hidden" asp-for="PropertyId" />

                        <div class="mb-3">
                            <label asp-for="AgentId" class="form-label">Select Agent</label>
                            <select asp-for="AgentId" class="form-select">
                                <option value="">Choose an agent...</option>
                                @if (agents != null)
                                {
                                    @foreach (var agent in agents)
                                    {
                                        <option value="@agent.Id">@agent.Name</option>
                                    }
                                }
                            </select>
                            <span asp-validation-for="AgentId" class="text-danger"></span>
                            <small class="form-text text-muted">Select from agents assigned to this property</small>
                        </div>

                        <div class="mb-3">
                            <label asp-for="ScheduledDate" class="form-label">Preferred Date & Time</label>
                            <input asp-for="ScheduledDate" type="datetime-local" class="form-control" />
                            <span asp-validation-for="ScheduledDate" class="text-danger"></span>
                        </div>

                        <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                            <a href="@Url.Action("PropertyDetails", "Client", new { id = Model.PropertyId })"
                               class="btn btn-secondary">Cancel</a>
                            <button type="submit" class="btn btn-primary">Schedule Appointment</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="card">
                <div class="card-header">
                    <h6>Property Summary</h6>
                </div>
                <div class="card-body">
                    <p><strong>@property?.Title</strong></p>
                    <p>@property?.Address</p>
                    <p><strong>Price:</strong> $@property?.Price.ToString("N0")</p>
                </div>
            </div>

            @if (agents != null && agents.Any())
            {
                <div class="card mt-3">
                    <div class="card-header">
                        <h6>Available Agents</h6>
                    </div>
                    <div class="card-body">
                        @foreach (var agent in agents)
                        {
                            <div class="mb-3 p-2 border rounded">
                                <strong>@agent.Name</strong><br>
                                <small class="text-muted">
                                    Email: @agent.Email<br>
                                    Phone: @agent.Phone
                                </small>
                            </div>
                        }
                    </div>
                </div>
            }
            else
            {
                <div class="card mt-3">
                    <div class="card-body text-center">
                        <p class="text-muted">No agents assigned to this property yet.</p>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}